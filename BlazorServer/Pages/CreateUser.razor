@page "/CreateUser"
@using Domain.DTOs
@using HTTPClients.ClientInterfaces
@using BlazorServer.Services
@inject IUserService UserService;
@inject IAuthService AuthService;

<div class="card">
    <h3>Register</h3>
    <div class="form-group field">
        <label for="name">User name:</label>
        <input type="text"  id="name" @bind="username" @bind:event="oninput"/>
        
        <label for ="password">Password:</label>
        <input type="text" id="password" @bind="password" @bind:event="oninput"/>
        <!--does this work for the password as well?-->
        @if (!string.IsNullOrEmpty(resultMsg))
        {
            <label style="color: @color">@resultMsg</label>
        }
    </div>
    <div class="button-row">
        <button @onclick="Create" disabled="@(string.IsNullOrEmpty(username))" class="acceptbtn">Create</button>
    </div>
</div>
@code {
    
    private string username = "";
    private string password = "";
    private string resultMsg = "Just note that you cannot register if you are already logged in";
    private string color = "";

    
    private async Task Create()
    {
        
        resultMsg = "";
       
            try
            {
                await UserService.Create(new UserCreationDto(username, password));
                username = "";
                password = "";
                resultMsg = "User successfully created";
                color = "green";
            }
            catch (Exception e)
            {
                Console.WriteLine(e);
                resultMsg = e.Message;
                color = "red";
            }  
        }
      
           
          
    
}